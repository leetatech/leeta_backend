// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "LEETA Engineering",
            "email": "leeta.org"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/order/make_order": {
            "post": {
                "description": "The endpoint takes a domain.Order request and creates a new order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Create Order",
                "parameters": [
                    {
                        "description": "create order request body",
                        "name": "domain.Order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    }
                }
            }
        },
        "/session/signup": {
            "post": {
                "description": "The endpoint allows users, both vendors and buyers to sign up",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "User Sign Up",
                "parameters": [
                    {
                        "description": "user sign up request body",
                        "name": "domain.SignUpRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DefaultSigningResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "DefaultSigningResponse": {
            "type": "object",
            "properties": {
                "auth_token": {
                    "type": "string"
                }
            }
        },
        "Order": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "source_account_id": {
                    "type": "string"
                },
                "source_user_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "status_ts": {
                    "type": "integer"
                },
                "ts": {
                    "type": "string"
                }
            }
        },
        "SignUpRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "user_type": {
                    "$ref": "#/definitions/models.UserCategory"
                }
            }
        },
        "models.UserCategory": {
            "type": "string",
            "enum": [
                "vendor",
                "buyer"
            ],
            "x-enum-varnames": [
                "VendorCategory",
                "BuyerCategory"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/leeta",
	Schemes:          []string{},
	Title:            "LEETA BACKEND API",
	Description:      "This is the entire doc",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
